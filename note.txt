一、如何使用序列化器？
1.如果仅仅只涉及到数据的校验
a.创建序列化器类
b.创建序列化对象
    序列化器类(data=字典)
c.开始进行校验：序列化对象.is_valid()
d.获取错误信息：序列化对象.errors
e.获取校验成功之后的值：序列化对象.data、序列化对象.validated_data

2.如果仅仅获取数据库中的数据
a.创建序列化器类
b.创建序列化对象
    序列化器类(instance=模型对象)
    序列化器类(instance=查询集对象, many=True)
    序列化器类(instance=普通对象)
c.序列化输出：序列化对象.data

3.既需要做数据校验也需要修改数据库中的数据
a.创建序列化器类
b.创建序列化对象
    序列化器类(instance=模型对象, data=字典)
    序列化器类(data=字典)
c.开始进行校验：序列化对象.is_valid()
d.获取错误信息：序列化对象.errors
e.获取校验成功之后对数据进行修改
    没有给instance传参：给序列化对象.save()  -> .create()
    有给instance传参：序列化对象.save()  -> .update()
f.序列化输出：序列化对象.data


二、如何实现接口自动化测试
1、流程
a.需求分析
b.测试计划
c.用例设计（接口自动化测试用例）
d.创建自动化测试框架（）
e.执行用例
f.测试报告
g.持续集成

2、自动化测试框架设计
a.测试数据放在哪里？
    excel、数据库、json、yaml
b.怎么实现断言？
    unittest、pytest、junit、testng
c.怎样实现数据驱动？
    ddt
d.怎么实现数据校验？
    通过python执行sql语句，pymysql模块
e.怎么实现接口依赖？
    动态属性机制去处理
f.怎么实现参数化实现？
    使用正则表达式去实现
g.怎么去处理日志、配置、测试报告？
    logging、yaml/configparse


httprunner：
    unittest、yaml、logging、自定义函数、locust


整个项目开发完成之后，会出现如下问题：
1.只能在本地或者局域网中访问平台
    a.需要部署到服务器中，绝大多数应用都是在Linux服务器上部署的

2.如果后端有bug，会自动将后端的敏感信息显示在前台，会有安全风险
    a.可以将全局配置文件settings.py中的 DEBUG = False
    b.后端的敏感信息不会在前台显示
    c.runserver不在提供静态文件服务，找不到静态文件（css、js、html）等
    d.除了需要使用静态文件服务器（nginx、Apache）以外，还需要应用服务器（gunicorn、uwsgi服务器）去处理动态资源

3.当前使用的是runserver服务器（开发阶段服务器，主要用于调试），并发性能非常差，不能满足线上业务需要
    python manage.py runnerserver
